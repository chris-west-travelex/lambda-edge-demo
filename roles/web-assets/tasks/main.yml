---
# Tasks
# =====
#
- include: preflight-checks.yml
  tags:
    - web-assets

- name: Create an OAI for CloudFront
  cloudfront_oai:
    state: present
    comment: "{{aws_environment}}-oai"
  register: oai
  tags:
    - web-assets

- name: Create the ACM certificate (**MUST** be in us-east-1!)
  cloudformation:
    stack_name: "{{aws_environment}}-cert"
    state: present
    region: us-east-1
    template: roles/web-assets/files/cdn-cert.yml
    template_parameters:
      DomainName: "{{domain_name}}"
      ValidationDomainName: "{{validation_domain_name}}"
  register: cert_stack
  tags:
    - web-assets

- name: Calculate HPKP fingerprint for the leaf
  shell: >
    aws acm get-certificate \
            --certificate-arn {{cert_stack.stack_outputs.Certificate}} \
            --region us-east-1 | \
    jq -r .Certificate | \
    openssl x509 -noout -pubkey | \
    openssl asn1parse -noout -inform pem -out /tmp/hpkp.asn1 && \
    openssl dgst -sha256 -binary /tmp/hpkp.asn1 | \
    openssl enc -base64 && \
    rm -f /tmp/hpkp.asn1
  register: leaf_fingerprint
  changed_when: false
  tags:
    - web-assets

- name: Create CDN distribution and associated resources
  cloudformation:
    stack_name: "{{aws_environment}}-cdn"
    state: present
    template: roles/web-assets/files/cdn-resources.yml
    template_parameters:
      Environment: "{{aws_environment}}"
      PriceClass: "{{cdn_price_class}}"
      OriginAccessIdentityId: "{{oai.identity.id}}"
      OriginAccessIdentityCanonicalUser: "{{oai.identity.s3_canonical_user_id}}"
      DomainName: "{{domain_name}}"
      Certificate: "{{cert_stack.stack_outputs.Certificate}}"
      HPKPHeader: >
        pin-sha256="{{([leaf_fingerprint.stdout]+hpkp_pins+default_hpkp_pins) | join('"; pin-sha256="')}}"; max-age=5184000
      CSPHeader: "{{content_security_policy}}"
  register: cdn_stack
  tags:
    - web-assets

- name: Fix lambda run-time
  lambda:
    name: "{{cdn_stack.stack_outputs.CDNLambda}}"
    state: present
    runtime: "nodejs4.3-edge"
  tags:
    - web-assets

- name: Associate the Lambda with the CloudFront distribution (+ fix IPv6)
  cloudfront_misc:
    id: "{{cdn_stack.stack_outputs.CDNId}}"
    is_ipv6_enabled: true
    lambda_assoc_eventtype: viewer-response
    lambda_assoc_arn: "{{cdn_stack.stack_outputs.CDNLambda}}"
  tags:
    - web-assets

- include: tests.yml
  tags:
    - web-assets
    - tests
